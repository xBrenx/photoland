// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  userName String @unique
  createdAt DateTime @default(now())
  email     String   @unique
  emailConfirmed Boolean @default(false)
  isAdmin Boolean @default(false)
  name      String?
  userProfile UserProfile? @relation("ProfileOwner")
}

model UserProfile {
  id String @id @default(uuid())
  user User @relation("ProfileOwner", fields: [userId], references: [id])
  userId String @unique
  post Post[] @relation("ProfilePosts")
  comments Comment[]
}

model Post {
  id String @id @default(uuid())
  createAt DateTime @default(now())
  author UserProfile @relation("ProfilePosts", fields: [authorId], references: [id])
  authorId String
  title String @db.VarChar(300)
  caption String @db.VarChar(1000)
  upVotes Int @default(0)
  downVotes Int @default(0)
  comments Comment[]
}

model Comment {
  id String @id @default(uuid())
  createAt DateTime @default(now())
  caption String @db.VarChar(1000)
  upVotes Int @default(0)
  downVotes Int @default(0)
  author UserProfile @relation(fields: [authorId], references: [userId])
  authorId String
  post Post @relation(fields: [postId], references: [id])
  postId String @unique
}

model Product {
  id Int @id @default(autoincrement())
  name String
  price Int @default(999)
  xreateAt DateTime @default(now())
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  isNew Boolean @default(false)
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  products Product[]
}